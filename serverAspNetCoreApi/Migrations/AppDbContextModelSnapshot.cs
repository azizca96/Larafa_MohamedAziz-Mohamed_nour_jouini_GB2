// <auto-generated />
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage;
using Microsoft.EntityFrameworkCore.Storage.Internal;
using serverAspNetCoreApi.Data;
using serverAspNetCoreApi.Data.Entities;
using System;

namespace serverAspNetCoreApi.Migrations
{
    [DbContext(typeof(AppDbContext))]
    partial class AppDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "2.0.1-rtm-125");

            modelBuilder.Entity("serverAspNetCoreApi.Data.Entities.Annonce", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasMaxLength(30);

                    b.Property<int>("PublicationId");

                    b.HasKey("Id");

                    b.HasIndex("PublicationId");

                    b.ToTable("Annonces");
                });

            modelBuilder.Entity("serverAspNetCoreApi.Data.Entities.Budget", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<double>("Dette");

                    b.Property<double>("Totale");

                    b.HasKey("Id");

                    b.ToTable("Budgets");
                });

            modelBuilder.Entity("serverAspNetCoreApi.Data.Entities.Hero", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("Name");

                    b.HasKey("Id");

                    b.ToTable("Heroes");
                });

            modelBuilder.Entity("serverAspNetCoreApi.Data.Entities.Notification", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("Type")
                        .IsRequired()
                        .HasMaxLength(30);

                    b.Property<int>("UtilisateurId");

                    b.HasKey("Id");

                    b.HasIndex("UtilisateurId");

                    b.ToTable("Notifications");
                });

            modelBuilder.Entity("serverAspNetCoreApi.Data.Entities.Paiement", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<int>("BudgetId");

                    b.Property<DateTime>("DatePaiement");

                    b.Property<double>("Montant");

                    b.Property<int>("NotificationId");

                    b.Property<int>("ProjetId");

                    b.HasKey("Id");

                    b.HasIndex("BudgetId");

                    b.HasIndex("NotificationId");

                    b.HasIndex("ProjetId");

                    b.ToTable("Paiements");
                });

            modelBuilder.Entity("serverAspNetCoreApi.Data.Entities.Participe", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<int>("ProjetId");

                    b.Property<int>("UtilisateurId");

                    b.HasKey("Id");

                    b.HasIndex("ProjetId");

                    b.HasIndex("UtilisateurId");

                    b.ToTable("Participes");
                });

            modelBuilder.Entity("serverAspNetCoreApi.Data.Entities.Projet", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<DateTime>("DateDebut");

                    b.Property<DateTime>("DateFin");

                    b.Property<string>("Libelle")
                        .IsRequired()
                        .HasMaxLength(30);

                    b.Property<string>("Titre")
                        .IsRequired()
                        .HasMaxLength(30);

                    b.HasKey("Id");

                    b.ToTable("Projets");
                });

            modelBuilder.Entity("serverAspNetCoreApi.Data.Entities.Propriete", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasMaxLength(30);

                    b.Property<string>("Proprietes")
                        .IsRequired()
                        .HasMaxLength(30);

                    b.Property<int>("Statut");

                    b.Property<int>("UtilisateurId");

                    b.HasKey("Id");

                    b.HasIndex("UtilisateurId");

                    b.ToTable("Proprietes");
                });

            modelBuilder.Entity("serverAspNetCoreApi.Data.Entities.Publication", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<DateTime>("DatePublication");

                    b.Property<int>("UtilisateurId");

                    b.HasKey("Id");

                    b.HasIndex("UtilisateurId");

                    b.ToTable("Publications");
                });

            modelBuilder.Entity("serverAspNetCoreApi.Data.Entities.Utilisateur", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("Email");

                    b.Property<string>("Login")
                        .HasMaxLength(30);

                    b.Property<string>("MotPasse")
                        .HasMaxLength(30);

                    b.Property<string>("Nom")
                        .IsRequired()
                        .HasMaxLength(30);

                    b.Property<string>("Prenom")
                        .HasMaxLength(30);

                    b.Property<int>("Role");

                    b.Property<string>("TelephoneFixe");

                    b.Property<string>("TelephonePortable");

                    b.HasKey("Id");

                    b.ToTable("Utilisateurs");
                });

            modelBuilder.Entity("serverAspNetCoreApi.Data.Entities.Annonce", b =>
                {
                    b.HasOne("serverAspNetCoreApi.Data.Entities.Publication", "Publication")
                        .WithMany()
                        .HasForeignKey("PublicationId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("serverAspNetCoreApi.Data.Entities.Notification", b =>
                {
                    b.HasOne("serverAspNetCoreApi.Data.Entities.Utilisateur", "Utilisateur")
                        .WithMany()
                        .HasForeignKey("UtilisateurId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("serverAspNetCoreApi.Data.Entities.Paiement", b =>
                {
                    b.HasOne("serverAspNetCoreApi.Data.Entities.Budget", "Budget")
                        .WithMany()
                        .HasForeignKey("BudgetId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("serverAspNetCoreApi.Data.Entities.Notification", "Notification")
                        .WithMany()
                        .HasForeignKey("NotificationId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("serverAspNetCoreApi.Data.Entities.Projet", "Projet")
                        .WithMany()
                        .HasForeignKey("ProjetId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("serverAspNetCoreApi.Data.Entities.Participe", b =>
                {
                    b.HasOne("serverAspNetCoreApi.Data.Entities.Projet", "Projet")
                        .WithMany()
                        .HasForeignKey("ProjetId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("serverAspNetCoreApi.Data.Entities.Utilisateur", "Utilisateur")
                        .WithMany()
                        .HasForeignKey("UtilisateurId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("serverAspNetCoreApi.Data.Entities.Propriete", b =>
                {
                    b.HasOne("serverAspNetCoreApi.Data.Entities.Utilisateur", "Utilisateur")
                        .WithMany()
                        .HasForeignKey("UtilisateurId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("serverAspNetCoreApi.Data.Entities.Publication", b =>
                {
                    b.HasOne("serverAspNetCoreApi.Data.Entities.Utilisateur", "Utilisateur")
                        .WithMany()
                        .HasForeignKey("UtilisateurId")
                        .OnDelete(DeleteBehavior.Cascade);
                });
#pragma warning restore 612, 618
        }
    }
}
